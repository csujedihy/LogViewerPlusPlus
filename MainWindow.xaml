<Window x:Class="LogViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helpers="clr-namespace:LogViewer.Helpers"
        xmlns:local="clr-namespace:LogViewer"
        mc:Ignorable="d"
        Title="LogViewer++" Height="450" Width="800" >
    <Window.CommandBindings>
        <CommandBinding
            Command="ApplicationCommands.Open" Executed="OpenCommandHandler" />
        <CommandBinding
            Command="ApplicationCommands.Close" Executed="CloseCommandHandler" />
    </Window.CommandBindings>
    <Window.Resources>
        <Style x:Key="ToolsSeparatorStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Silver"></Setter>
            <Setter Property="Margin" Value="10,3,10,3"></Setter>
            <Setter Property="Width" Value="1"></Setter>
        </Style>
        <Style x:Key="FilterToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Padding" Value="5,0,5,0"></Setter>
            <Setter Property="Margin" Value="3,3,0,3"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="IsChecked" Value="False"></Setter>
            <Setter Property="IsThreeState" Value="False"></Setter>
        </Style>
        <Style x:Key="GoToLineBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Width" Value="150"></Setter>
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Style.Triggers>
                <Trigger  Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="SkyBlue"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="6" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Padding="2" Grid.ColumnSpan="3">
            <MenuItem Header="File">
                <MenuItem
                    Header="_Open"
                    Command="ApplicationCommands.Open" />
                <MenuItem
                    Header="_Close"
                    Command="ApplicationCommands.Close" />
            </MenuItem>
        </Menu>
        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ListView
                Grid.Row="0"
                x:Name="LogListView"
                MaxHeight="1000"
                Width="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Visible"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                VirtualizingPanel.VirtualizationMode="Recycling"
                VirtualizingPanel.IsVirtualizing="True"
                SelectionChanged="LogListView_SelectionChanged"
                Drop="LogListView_Drop"
                AllowDrop="true"
                PreviewKeyDown="LogListView_PreviewKeyDown"
                DataContext="{x:Static local:MainWindow.colorThemeViewModel}"
                Background="{Binding ListViewBgBrush}" >
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border Padding="5" Width="Auto" Background="{Binding LogRowBgBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding LineNoWidth, Mode=OneTime}" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    Text="{Binding LineNoText, Mode=OneTime}"
                                    FontFamily="Consolas"
                                    FontWeight="Medium"
                                    FontSize="12"
                                    TextAlignment="Right"
                                    VerticalAlignment="Center"
                                    Foreground="{Binding LineNoFgBrush, Source={x:Static local:MainWindow.colorThemeViewModel}, Mode=OneWay}" />
                                <TextBlock
                                    x:Name="LogTextBlock"
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    Text="{Binding Text, Mode=OneTime}"
                                    Foreground="{Binding LogTextFgBrush, Source={x:Static local:MainWindow.colorThemeViewModel}, Mode=OneWay}"
                                    FontFamily="Consolas"
                                    FontWeight="Medium"
                                    FontSize="12"
                                    Width="Auto" />
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <RichTextBox x:Name="LogTextTextBox" Grid.Row="1" IsReadOnly="True" Visibility="Collapsed" Padding="5" FontSize="14" FontFamily="Consolas" MinHeight="100" />
        </Grid>
        <GridSplitter Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch">
            <GridSplitter.Template>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid>
                        <Button Content="⁞" FontWeight="Bold"/>
                        <Rectangle Fill="#00FFFFFF" />
                    </Grid>
                </ControlTemplate>
            </GridSplitter.Template>
        </GridSplitter>
        <DataGrid
            x:Name="FilterDataGrid"
            DataGrid.GridLinesVisibility="None"
            Grid.Row="1" Grid.Column="2"
            AutoGenerateColumns="False"
            RowHeaderWidth="0"
            CanUserAddRows="False" >
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridRow}">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Padding" Value="4" />
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border
                                    Padding="{TemplateBinding Padding}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="DataGrid">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="LightSlateGray" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add Filter" Click="AddFilterHandler"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="" Binding="{Binding IsEnabled}" />
                <DataGridTextColumn Header="Pattern" IsReadOnly="True" Binding="{Binding Pattern}" Width="150">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="4,0,0,0" />
                            <Setter Property="Foreground" Value="{Binding LogTextFgBrush, Source={x:Static local:MainWindow.colorThemeViewModel}, Mode=OneWay}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="{Binding PatternBgColor}"/>
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Hits" IsReadOnly="True" Binding="{Binding Hits}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Grid.Row="2"  Grid.ColumnSpan="3" Orientation = "Horizontal">
            <Border Style="{StaticResource TextboxContainerStyle}">
                <StackPanel Orientation="Horizontal" >
                    <TextBox x:Name="SearchBox" Style="{StaticResource SearchBoxStyle}" TextChanged="SearchBoxTextChanged"/>
                    <ToggleButton
                        x:Name="CaseSensitiveToggle"
                        Content="Aa"
                        Click="CaseSensitiveToggle_Click"
                        Style="{StaticResource SearchModeToggleStyle}"
                        ToolTip="Case senstive search"/>
                    <ToggleButton
                        x:Name="ExactMatchToggle"
                        Content="Ex"
                        Click="ExactMatchToggle_Click"
                        Style="{StaticResource SearchModeToggleStyle}"
                        ToolTip="Whole word match"/>
                    <ToggleButton
                        x:Name="RegexToggle"
                        Content=".*"
                        Click="RegexToggle_Click"
                        Style="{StaticResource SearchModeToggleStyle}"
                        ToolTip="Regex"/>
                </StackPanel>
            </Border>
            <TextBlock x:Name="SearchResultTextBox" Text="No results" Style="{StaticResource ToolLabelStyle}" />
            <Button x:Name="PrevButton" Content="&#x1f844;" Style="{StaticResource SearchNavButtonStyle}" ToolTip="Previous result (F3)"/>
            <Button x:Name="NextButton" Content="&#x1f846;" Style="{StaticResource SearchNavButtonStyle}" ToolTip="Next result (F4)"/>
            <ToggleButton
                        x:Name="FilterToggle"
                        Content="Filter"
                        Click="FilterToggle_Click"
                        Style="{StaticResource FilterToggleStyle}"
                        ToolTip="Filter to results"/>
            <Border Style="{StaticResource ToolsSeparatorStyle}"/>
            <TextBlock Text="Go to Line" Style="{StaticResource ToolLabelStyle}"/>
            <Border Style="{StaticResource TextboxContainerStyle}">
                <TextBox x:Name="GoToLineBox" TextChanged="GoToLineBoxTextChanged" Style="{StaticResource GoToLineBoxStyle}"/>
            </Border>
            <Border Style="{StaticResource ToolsSeparatorStyle}"/>
            <ToggleButton
                        x:Name="DarkModeToggle"
                        Content="Dark Mode"
                        Click="DarkModeToggle_Click"
                        Style="{StaticResource FilterToggleStyle}"
                        ToolTip="Toggle dark mode"
                        IsThreeState="False"
                        IsChecked="{Binding DarkModeEnabled, Source={x:Static local:MainWindow.colorThemeViewModel}}"/>
        </StackPanel>
    </Grid>
</Window>
